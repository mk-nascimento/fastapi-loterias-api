name: fastapi-loterias-devcontainer

networks:
  mongodb-nw:
    name: fastapi-loterias-mongodb_nw
  redis-nw:
    name: fastapi-loterias-redis_nw

volumes:
  mongodb-data:
    name: fastapi-loterias-data
  redis-data:
    name: fastapi-loterias-cache

services:
  redis:
    container_name: fastapi-loterias-cache
    extends: &common-extends
      file: ../.docker/compose.yml
      service: redis
    healthcheck: &health
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - redis-nw
    ports:
      - 10001:8001
    volumes:
      - redis-data:/data

  mongodb:
    container_name: fastapi-loterias-db
    extends:
      <<: *common-extends
      service: mongo
    environment: &env
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: loterias
    healthcheck:
      <<: *health
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
    networks:
      - mongodb-nw
    volumes:
      - mongodb-data:/data/db

  api:
    container_name: fastapi-loterias-api
    image: python:loteiras-api
    command: sleep infinity
    working_dir: /workdir
    environment:
      <<: *env
      MONGO_INITDB_HOST: mongodb
      REDIS_HOST: redis
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    build:
      context: .
      args:
        VARIANT: 3.12
    networks:
      - mongodb-nw
      - redis-nw
    volumes:
      - ../:/workdir:cached
